syntax = "proto3";

package api.inscription.v1;
import "google/api/annotations.proto";

option go_package = "backend/api/inscription/v1;v1";

service Inscription {
  rpc GetProfile(ByAddress) returns (SwiftResponse) {
    option (google.api.http) = {
      get: "/api/profile"
    };
  }

  rpc GetGroup(ByAddress) returns (SwiftResponses) {
    option (google.api.http) = {
      get: "/api/group"
    };
  }

  rpc GetMessageWindow(GetMessageWindowReq) returns (MessageWindow) {
    option (google.api.http) = {
      get: "/api/message_window"
    };
  }

  rpc GetMessage(GetMessageReq) returns (GetMessageResponse) {
    option (google.api.http) = {
      get: "/api/message"
    };
  }

  rpc GetMessageByHash(GetMessageByHashReq) returns (SwiftResponse) {
    option (google.api.http) = {
      get: "/api/message/{hash}"
    };
  }

  rpc GetGroupMessage(GetGroupMessageReq) returns (GetMessageResponse) {
    option (google.api.http) = {
      get: "/api/group_message"
    };
  }

  rpc GetTweet(GetTweetReq) returns (TweetResponse) {
    option (google.api.http) = {
      get: "/api/tweet"
    };
  }

  rpc GetFollowTweet(GetFollowTweetReq) returns (TweetResponse) {
    option (google.api.http) = {
      get: "/api/follow_tweet"
    };
  }

  rpc GetTweetByAddress(GetTweetByAddressReq) returns (TweetResponse) {
    option (google.api.http) = {
      get: "/api/tweet/{address}"
    };
  }

  rpc GetFollower(ByAddress) returns (GetFollowerResponse) {
    option (google.api.http) = {
      get: "/api/follow"
    };
  }

}

message GetAnyByTrxHashReq{
  string trx_hash = 1;
}

message  ByAddress{
  string address = 1;
}

message SwiftResponses{
  repeated SwiftResponse groups = 1;
}

message GetMessageByHashReq{
  string hash = 1;
  string type = 2;
}

message GetMessageResponse{
  repeated SwiftResponse messages = 1;
}

message GetFollowerResponse{
  repeated SwiftResponse follower = 1;
}

message GetMessageWindowReq{
  string owner = 1;
}

message GetMessageReq{
  string owner = 1;
  string to = 2;
  int64 limit = 3;
  int64 offset = 4;
}

message GetGroupMessageReq{
  string title = 1;
  int64 limit = 2;
  int64 offset = 3;
}

message GetTweetReq{
  string owner = 1;
  int64 limit = 2;
  int64 offset = 3;
}

message MessageWindow{
  repeated SwiftResponse profiles = 1;
}

message GetFollowTweetReq{
  string owner = 1;
  int64 limit = 2;
  int64 offset = 3;
}

message GetTweetByAddressReq{
  string owner = 1;
  string address = 2;
  int64 limit = 3;
  int64 offset = 4;
}

message SwiftResponse{
  string type = 1;
  string title = 2;
  string text = 3;
  repeated string image = 4;
  repeated string receiver = 5;
  repeated string at = 6;
  string with = 7;
  int64 height = 8;
  string trx_hash = 9;
  string trx_time = 10;
  string sender = 11;
  string chain = 12;
}


message Tweets{
  SwiftResponse profile = 1;
  SwiftResponse tweet = 2;
  SwiftResponse with_profile = 3;
  SwiftResponse with = 4;
  repeated Comment comments = 5;
  int64 like_num = 6;
  bool like_bool = 7;
}

message TweetResponse{
  repeated Tweets tweets = 1;
}

message Comment{
    SwiftResponse profile = 1;
    SwiftResponse comment = 2;
}